{"version":3,"sources":["components/Common/Forms/LoginForm/LoginForm.module.css","components/Login/Login.module.css","components/Common/Forms/LoginForm/LoginForm.jsx","components/Login/Login.jsx","components/Common/Forms/CustomForms/CustomForms.jsx","components/Common/Forms/CustomForms/CustomForms.module.css"],"names":["module","exports","initialValues","email","password","rememberMe","validationSchema","Yup","shape","required","min","max","LoginForm","onSubmit","error","type","name","placeholder","component","CustomInput","TextError","className","styles","label","button","mdtp","login","connect","state","isAuth","auth","to","title","props","textError","children","CustomTextarea","field","form","touched","errors","textareaWrapper","textarea","textareaError","inputWrapper","toUpperCase","input","inputError"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,MAAQ,2B,oBCA7DD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,wB,wGCK5GC,EAAgB,CAAEC,MAAO,GAAIC,SAAU,GAAIC,YAAY,GACvDC,EAAmBC,MAAaC,MAAM,CAC3CL,MAAOI,MAAaJ,QAAQM,SAAS,aACrCL,SAAUG,MAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaF,SAAS,eAyB5DG,EArBG,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAC7B,OACC,kBAAC,IAAD,CAAQZ,cAAeA,EAAeW,SAAUA,EAAUP,iBAAkBA,GAC3E,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOS,KAAK,QAAQC,KAAK,QAAQC,YAAY,mBAAmBC,UAAWC,MAC3E,kBAAC,IAAD,CAAcH,KAAK,QAAQE,UAAWE,MACtC,kBAAC,IAAD,CAAOL,KAAK,WAAWC,KAAK,WAAWC,YAAY,sBAAsBC,UAAWC,MACpF,kBAAC,IAAD,CAAcH,KAAK,WAAWE,UAAWE,MACzC,2BAAOC,UAAWC,IAAOC,OACxB,kBAAC,IAAD,CAAOR,KAAK,WAAWC,KAAK,eAD7B,eAICF,GAAS,wBAAIO,UAAWC,IAAOR,OAAQA,GACxC,4BAAQO,UAAWC,IAAOE,OAAQT,KAAK,UAAvC,Y,yCCFEU,EAAO,CAAEC,WAEAC,uBAHF,SAAAC,GAAK,MAAK,CAAEC,OAAQD,EAAME,KAAKD,OAAQf,MAAOc,EAAME,KAAKhB,SAGzCW,EAAdE,EAnBD,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,OAAOH,EAAmB,EAAnBA,MAAOZ,EAAY,EAAZA,MAC9B,GAAIe,EAAQ,OAAO,kBAAC,IAAD,CAAUE,GAAG,aAOhC,OACC,6BACC,wBAAIV,UAAWC,IAAOU,OAAtB,cACA,kBAAC,EAAD,CAAWnB,SAPI,SAAC,GAAqC,IAAnCV,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACpCqB,EAAMvB,EAAOC,EAAUC,IAMSS,MAAOA,S,oLCf5BM,EAAY,SAAAa,GACxB,OAAO,yBAAKZ,UAAWC,IAAOY,WAAYD,EAAME,WAGpCC,EAAiB,SAAC,GAAD,IAC7BC,EAD6B,EAC7BA,MAD6B,IAE7BC,KAAQC,EAFqB,EAErBA,QAASC,EAFY,EAEZA,OACdP,EAH0B,uCAK7B,yBAAKZ,UAAWC,IAAOmB,iBACtB,8CAAcJ,EAAWJ,EAAzB,CAAgCZ,UAAS,UAAKC,IAAOoB,SAAZ,YAAwBH,EAAQF,EAAMrB,OAASwB,EAAOH,EAAMrB,OAASM,IAAOqB,oBAK1GxB,EAAc,SAAC,GAAD,IAC1BkB,EAD0B,EAC1BA,MAD0B,IAE1BC,KAAQC,EAFkB,EAElBA,QAASC,EAFS,EAETA,OACdP,EAHuB,uCAK1B,yBAAKZ,UAAWC,IAAOsB,cACtB,2BAAOvB,UAAWC,IAAOC,OACvBc,EAAMrB,KAAK6B,cAAgB,IAC5B,2CAAWR,EAAWJ,EAAtB,CAA6BZ,UAAS,UAAKC,IAAOwB,MAAZ,YAAqBP,EAAQF,EAAMrB,OAASwB,EAAOH,EAAMrB,OAASM,IAAOyB,mB,mBCzBlH/C,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,aAAe,kCAAkC,cAAgB,mCAAmC,WAAa,gCAAgC,UAAY","file":"static/js/6.aed3c5b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"LoginForm_button__3J_o2\",\"error\":\"LoginForm_error__32ujR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__2FJmy\",\"label\":\"Login_label__2rwos\",\"field\":\"Login_field__1_Kdc\",\"button\":\"Login_button__2YP0u\"};","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"./LoginForm.module.css\";\r\nimport { CustomInput, TextError } from \"../CustomForms/CustomForms\";\r\n\r\nconst initialValues = { email: \"\", password: \"\", rememberMe: false };\r\nconst validationSchema = Yup.object().shape({\r\n\temail: Yup.string().email().required(\"Required!\"),\r\n\tpassword: Yup.string().min(8, \"Too Short!\").max(20, \"Too Long!\").required(\"Required!\"),\r\n});\r\n\r\n// Formik Form Component\r\nconst LoginForm = ({onSubmit, error}) => {\r\n\treturn (\r\n\t\t<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n\t\t\t<Form>\r\n\t\t\t\t<Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" component={CustomInput} />\r\n\t\t\t\t<ErrorMessage name=\"email\" component={TextError} />\r\n\t\t\t\t<Field type=\"password\" name=\"password\" placeholder=\"Enter your password\" component={CustomInput} />\r\n\t\t\t\t<ErrorMessage name=\"password\" component={TextError} />\r\n\t\t\t\t<label className={styles.label}>\r\n\t\t\t\t\t<Field type=\"checkbox\" name=\"rememberMe\" />\r\n\t\t\t\t\tRemember Me\r\n\t\t\t\t</label>\r\n\t\t\t\t{error && <h3 className={styles.error}>{error}</h3>}\r\n\t\t\t\t<button className={styles.button} type=\"submit\">\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport LoginForm from \"../Common/Forms/LoginForm/LoginForm\";\r\nimport styles from \"./Login.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"./../../Redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = ({ isAuth,login, error }) => {\r\n\tif (isAuth) return <Redirect to=\"/profile\" />;\r\n\r\n\t//code for onSubmit process\r\n\tconst onSubmit = ({ email, password, rememberMe }) => {\r\n\t\tlogin(email, password, rememberMe);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className={styles.title}>Login Page</h1>\r\n\t\t\t<LoginForm onSubmit={onSubmit} error={error} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mstp = state => ({ isAuth: state.auth.isAuth, error: state.auth.error });\r\nconst mdtp = { login };\r\n\r\nexport default connect(mstp, mdtp)(Login);\r\n","import React from \"react\";\r\nimport styles from \"./CustomForms.module.css\";\r\n\r\nexport const TextError = props => {\r\n\treturn <div className={styles.textError}>{props.children}</div>;\r\n};\r\n\r\nexport const CustomTextarea = ({\r\n\tfield, // { name, value, onChange, onBlur }\r\n\tform: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n\t...props\r\n}) => (\r\n\t<div className={styles.textareaWrapper}>\r\n\t\t<textarea {...field} {...props} className={`${styles.textarea} ${touched[field.name] && errors[field.name] && styles.textareaError}`} />\r\n\t\t{/* {touched[field.name] && errors[field.name] && <div className=\"error\">{errors[field.name]}</div>} */}\r\n\t</div>\r\n);\r\n\r\nexport const CustomInput = ({\r\n\tfield, // { name, value, onChange, onBlur }\r\n\tform: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n\t...props\r\n}) => (\r\n\t<div className={styles.inputWrapper}>\r\n\t\t<label className={styles.label}>\r\n\t\t\t{field.name.toUpperCase() + \":\"}\r\n\t\t\t<input {...field} {...props} className={`${styles.input} ${touched[field.name] && errors[field.name] && styles.inputError}`} />\r\n\t\t</label>\r\n\t</div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrapper\":\"CustomForms_textareaWrapper__1Vri7\",\"inputWrapper\":\"CustomForms_inputWrapper__2ghOv\",\"textareaError\":\"CustomForms_textareaError__QYTim\",\"inputError\":\"CustomForms_inputError__2bD2o\",\"textError\":\"CustomForms_textError__3sBPV\"};"],"sourceRoot":""}