{"version":3,"sources":["components/Common/Forms/AddMessageForm/AddMessageForm.jsx","components/Common/Forms/AddMessageForm/AddMyMessageForm.module.css","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Person/Person.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/MyMessage/MyMessage.module.css","components/Dialogs/Person/Person.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/MyMessage/MyMessage.jsx","components/Dialogs/MyMessage/MyMessageContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Common/Forms/CustomForms/CustomForms.jsx","components/Common/Forms/CustomForms/CustomForms.module.css"],"names":["initialValues","textarea","validationSchema","Yup","shape","max","required","AddMessageForm","props","onSubmit","as","className","styles","name","placeholder","component","CustomTextarea","TextError","button","type","module","exports","mstp","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Person","path","id","item","avatar","src","alt","activeClassName","active","Message","itemWrapper","place","message","MyMessage","wrapper","values","addMyMessage","MyMessageContainer","newMessageText","dialogsPage","dispatch","addMyMessageAC","Dialogs","personsElements","persons","map","person","key","messagesElements","messages","chat","compose","textError","children","field","form","touched","errors","textareaWrapper","textareaError","CustomInput","inputWrapper","label","toUpperCase","input","inputError"],"mappings":"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","file":"static/js/5.837db9f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"./AddMyMessageForm.module.css\";\r\nimport { CustomTextarea, TextError } from \"../CustomForms/CustomForms\";\r\n\r\nconst initialValues = { textarea: \"\" };\r\nconst validationSchema = Yup.object().shape({ textarea: Yup.string().max(50, \"Too Long!\").required(\"Required!\") });\r\n\r\n// Formik Form Component\r\nconst AddMessageForm = props => {\r\n\treturn (\r\n\t\t<Formik initialValues={initialValues} onSubmit={props.onSubmit} validationSchema={validationSchema}>\r\n\t\t\t<Form>\r\n\t\t\t\t<Field as=\"textarea\" className={styles.textarea} name=\"textarea\" placeholder=\"Enter your post\" component={CustomTextarea} />\r\n\t\t\t\t<ErrorMessage name=\"textarea\" component={TextError} />\r\n\t\t\t\t<button className={styles.button} type=\"submit\">\r\n\t\t\t\t\tAdd message\r\n\t\t\t\t</button>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default AddMessageForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"AddMyMessageForm_textarea__rlpHg\",\"button\":\"AddMyMessageForm_button__ancnJ\"};","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mstp = state => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const withAuthRedirect = Component => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\t// if not authorized - redirect to login\r\n\t\t\tif (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\t\t\treturn <Component {...this.props} />;\r\n\t\t}\r\n\t}\r\n\r\n\tconst ConnectedAuthRedirectComponent = connect(mstp)(RedirectComponent);\r\n\treturn ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__24U5n\",\"persons\":\"Dialogs_persons__Mhear\",\"chat\":\"Dialogs_chat__cQisT\",\"myMessage\":\"Dialogs_myMessage__GZAYK\",\"textarea\":\"Dialogs_textarea__3Ur4B\",\"button\":\"Dialogs_button__3SEHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Person_item__2Mq7g\",\"active\":\"Person_active__1mi58\",\"avatar\":\"Person_avatar__1PWiK\",\"name\":\"Person_name___jPYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"Message_itemWrapper__1kWBs\",\"item\":\"Message_item__FUUrg\",\"left\":\"Message_left__mwEWr\",\"right\":\"Message_right__26hIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyMessage_wrapper__3Nqmj\",\"textarea\":\"MyMessage_textarea__2mR6q\",\"button\":\"MyMessage_button__1YuDb\"};","import React from \"react\";\r\nimport styles from \"./Person.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Person вызывается из Dialogs.js (с пропсами).\r\n// Person отрисовывает 1 элемент Person\r\nconst Person = (props) => {\r\n\tconst path = \"/dialogs/\" + props.id;\r\n\treturn (\r\n\t\t<div className={styles.item}>\r\n\t\t\t<img className={styles.avatar} src={props.avatar} alt=\"avatar\" />\r\n\t\t\t<NavLink\r\n\t\t\t\tclassName={styles.name}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t\tto={path}\r\n\t\t\t>\r\n\t\t\t\t{props.name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport styles from \"./Message.module.css\";\r\n\r\n// Message вызывается из Dialogs.js (с пропсами).\r\n// Message отрисовывает 1элемент Message\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={styles.itemWrapper + \" \" + styles[props.place]}>\r\n\t\t\t<p className={styles.item}>{props.message}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./MyMessage.module.css\";\r\nimport AddMessageForm from \"./../../Common/Forms/AddMessageForm/AddMessageForm\";\r\n\r\n// Дем компонента\r\nconst MyMessage = props => {\r\n\t//code for onSubmit process\r\n\tconst addNewMessage = values => props.addMyMessage(values.textarea);\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<AddMessageForm onSubmit={addNewMessage} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MyMessage;\r\n","import MyMessage from \"./MyMessage\";\r\nimport { addMyMessageAC } from \"../../../Redux/dialogsReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// берет стейт из редакс стора и возвращает ветку newMessageText\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tnewMessageText: state.dialogsPage.newMessageText,\r\n\t};\r\n};\r\n\r\n// берет нужные диспатч методы из редакс стора\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\taddMyMessage: newMessageText => {\r\n\t\t\tdispatch(addMyMessageAC(newMessageText));\r\n\t\t},\r\n\t};\r\n};\r\n\r\n// передает пропсы (из mapStateToProps) в компоненту MyMessage, и вызывает MyMessage (React-Redux)\r\nconst MyMessageContainer = connect(mapStateToProps, mapDispatchToProps)(MyMessage);\r\n\r\nexport default MyMessageContainer;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport Person from \"./Person/Person\";\r\nimport Message from \"./Message/Message\";\r\nimport MyMessageContainer from \"./MyMessage/MyMessageContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Дем компонента\r\nconst Dialogs = props => {\r\n\t// мапит из пропс.persons объект из компонент Person\r\n\tconst personsElements = props.persons.map(person => (\r\n\t\t<Person name={person.name} key={person.id} id={person.id} avatar={person.avatar} />\r\n\t));\r\n\r\n\t// мапит из пропс.messages объект из компонент Message\r\n\tconst messagesElements = props.messages.map(message => {\r\n\t\tlet place = \"left\";\r\n\t\tif (message.id % 2 === 0) {\r\n\t\t\tplace = \"right\";\r\n\t\t}\r\n\t\treturn <Message key={message.id} id={message.id} message={message.message} place={place} />;\r\n\t});\r\n\r\n\t// if not authorized - redirect to login\r\n\tif (!props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<div className={styles.persons}>{personsElements}</div>\r\n\t\t\t<div className={styles.chat}>{messagesElements}</div>\r\n\t\t\t<MyMessageContainer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n// берет стейт из редакс стора и возвращает ветку persons\r\nconst mstp = state => {\r\n\treturn {\r\n\t\tpersons: state.dialogsPage.persons,\r\n\t\tmessages: state.dialogsPage.messages,\r\n\t};\r\n};\r\n\r\n// compose (from redux) объединяет несколько Хоков и прочих надстроек - аргументы в обратной очередности от вызова\r\nexport default compose(connect(mstp), withAuthRedirect)(Dialogs);\r\n","import React from \"react\";\r\nimport styles from \"./CustomForms.module.css\";\r\n\r\nexport const TextError = props => {\r\n\treturn <div className={styles.textError}>{props.children}</div>;\r\n};\r\n\r\nexport const CustomTextarea = ({\r\n\tfield, // { name, value, onChange, onBlur }\r\n\tform: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n\t...props\r\n}) => (\r\n\t<div className={styles.textareaWrapper}>\r\n\t\t<textarea {...field} {...props} className={`${styles.textarea} ${touched[field.name] && errors[field.name] && styles.textareaError}`} />\r\n\t\t{/* {touched[field.name] && errors[field.name] && <div className=\"error\">{errors[field.name]}</div>} */}\r\n\t</div>\r\n);\r\n\r\nexport const CustomInput = ({\r\n\tfield, // { name, value, onChange, onBlur }\r\n\tform: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n\t...props\r\n}) => (\r\n\t<div className={styles.inputWrapper}>\r\n\t\t<label className={styles.label}>\r\n\t\t\t{field.name.toUpperCase() + \":\"}\r\n\t\t\t<input {...field} {...props} className={`${styles.input} ${touched[field.name] && errors[field.name] && styles.inputError}`} />\r\n\t\t</label>\r\n\t</div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrapper\":\"CustomForms_textareaWrapper__1Vri7\",\"inputWrapper\":\"CustomForms_inputWrapper__2ghOv\",\"textareaError\":\"CustomForms_textareaError__QYTim\",\"inputError\":\"CustomForms_inputError__2bD2o\",\"textError\":\"CustomForms_textError__3sBPV\"};"],"sourceRoot":""}