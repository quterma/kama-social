{"version":3,"sources":["Redux/authReducer.js","components/Header/Header.module.css","components/Navbar/Friends/Friend/Friend.module.css","components/Navbar/Friends/Friends.module.css","components/Common/Preloader/Preloader.jsx","App.module.css","assets/images/incognito.png","Redux/profileReducer.js","components/Navbar/Navbar.module.css","Redux/dialogsReducer.js","components/Common/Utils/ObjectHelpers.js","Redux/usersReducer.js","assets/images/react.png","components/Common/Preloader/Preloader.module.css","api/api.js","serviceWorker.js","components/Navbar/Friends/Friend/Friend.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/Friends/FriendsContainer.jsx","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","Redux/appReducer.js","App.js","Redux/redux-store.js","index.js"],"names":["initialState","id","email","login","isAuth","photo","error","setAuthUserData","type","payload","getAuth","dispatch","a","authAPI","data","resultCode","profileAPI","getProfile","then","photos","small","password","rememberMe","request","userId","messages","logout","authReducer","state","action","module","exports","Preloader","className","styles","ldsRing","posts","post","likes","profile","status","addMyPostAC","newPostText","setStatus","getUserProfile","getStatus","updateStatus","profileReducer","newPost","filter","postId","persons","name","avatar","isFriend","message","addMyMessageAC","newMessageText","dialogsReducer","newMessage","updateObjectInArray","items","itemId","objPropName","newProps","map","user","users","pageSize","totalUsersCount","currentPage","isFetching","isFollowingInProcess","followAC","unfollowAC","setCurrentPage","toggleIsFetching","toggleIsFollowingInProgress","getUsersThunk","page","usersAPI","getUsers","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","usersReducer","followed","instance","axios","baseURL","withCredentials","headers","get","response","delete","put","Boolean","window","location","hostname","match","Friend","props","path","item","src","alt","activeClassName","active","to","Friends","chosenFriends","person","key","wrapper","title","container","FriendsContainer","connect","dialogsPage","Navbar","link","margin50","Header","logo","apiLink","target","rel","href","loginWrapper","incognito","onClick","HeaderApiContainer","this","Component","HeaderContainer","auth","initialized","appReducer","ProfileContainer","React","lazy","DialogsContainer","UsersContainer","LoginPage","Settings","Music","News","App","initializeApp","gridContent","fallback","render","component","mdtp","compose","withRouter","app","reducers","combineReducers","profilePage","usersPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7205f527.chunk.js","sourcesContent":["import { profileAPI, authAPI } from \"./../api/api\";\r\n\r\n// constants for action types\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\nconst SET_USER_PHOTO = \"SET_USER_PHOTO\";\r\nconst SET_ERROR = \"SET_ERROR\";\r\n\r\n// initial state for first load\r\nconst initialState = {\r\n\tid: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false,\r\n\tphoto: null,\r\n\terror: null,\r\n};\r\n\r\n// get state and action, create COPY of STATE!, change it and return new state (if no changes - returns old one)\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn { ...state, ...action.payload };\r\n\r\n\t\tcase SET_USER_PHOTO:\r\n\t\t\treturn { ...state, ...action.photo };\r\n\r\n\t\tcase SET_ERROR:\r\n\t\t\treturn { ...state, ...action };\r\n\r\n\t\t// if action not matched - return old state\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// action creators - to avoid string typing\r\nconst setAuthUserData = (id, email, login, isAuth, error) => ({ type: SET_USER_DATA, payload: { id, email, login, isAuth, error } });\r\nconst setAuthUserPhoto = photo => ({ type: SET_USER_PHOTO, photo });\r\nconst setError = error => ({ type: SET_ERROR, error });\r\n\r\n// thunk creators\r\nexport const getAuth = () => async dispatch => {\r\n\tconst data = await authAPI.getAuth();\r\n\tif (data.resultCode === 0) {\r\n\t\tconst { id, email, login } = data.data;\r\n\t\tdispatch(setAuthUserData(id, email, login, true, null));\r\n\t\tprofileAPI.getProfile(id).then(data => dispatch(setAuthUserPhoto(data.photos.small)));\r\n\t}\r\n};\r\n\r\nexport const login = (login, password, rememberMe) => async dispatch => {\r\n\tconst request = await authAPI.login(login, password, rememberMe);\r\n\tif (request.data.resultCode === 0) {\r\n\t\tdispatch(getAuth(request.data.userId));\r\n\t} else {\r\n\t\tdispatch(setError(request.data.messages[0]));\r\n\t}\r\n};\r\nexport const logout = () => async dispatch => {\r\n\tconst request = await authAPI.logout();\r\n\tif (request.data.resultCode === 0) {\r\n\t\tdispatch(setAuthUserData(null, null, null, false, null));\r\n\t}\r\n};\r\n\r\nexport default authReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2bJnq\",\"logo\":\"Header_logo__1WCDI\",\"loginWrapper\":\"Header_loginWrapper__31g5r\",\"avatar\":\"Header_avatar__iaW6F\",\"apiLink\":\"Header_apiLink__3sUNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__1ov5j\",\"active\":\"Friend_active__n33DK\",\"avatar\":\"Friend_avatar__15a0q\",\"name\":\"Friend_name__3om4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__ZlxJX\",\"title\":\"Friends_title__1gMZn\",\"container\":\"Friends_container__2Q34y\"};","import React from \"react\";\r\nimport styles from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n\treturn (\r\n\t\t<div className={styles.ldsRing}>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__bAeat\",\"gridContent\":\"App_gridContent__2CXl5\"};","module.exports = __webpack_public_path__ + \"static/media/incognito.0856ad08.png\";","import { profileAPI } from \"./../api/api\";\r\n\r\n// constants for action types\r\nconst ADD_MY_POST = \"ADD_MY_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\n// initial state for first load\r\nconst initialState = {\r\n\tposts: [\r\n\t\t// мои (?) мессаги в Профиле\r\n\t\t{ id: 1, post: \"Hi, how r u?\", likes: 15 },\r\n\t\t{ id: 2, post: \"it is my 1st post\", likes: 20 },\r\n\t],\r\n\tprofile: null,\r\n\tstatus: \"\",\r\n};\r\n\r\n// get state and action, create COPY of STATE!, change it and return new state (if no changes - returns old one)\r\nconst profileReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_MY_POST:\r\n\t\t\tif (action.newPostText === \"\") return state;\r\n\r\n\t\t\tconst newPost = {\r\n\t\t\t\tid: 10,\r\n\t\t\t\tpost: action.newPostText,\r\n\t\t\t\tlikes: 0,\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t};\r\n\r\n\t\tcase SET_USER_PROFILE:\r\n\t\t\treturn { ...state, profile: action.profile };\r\n\r\n\t\tcase SET_STATUS:\r\n\t\t\treturn { ...state, status: action.status };\r\n\r\n\t\tcase DELETE_POST:\r\n\t\t\treturn { ...state, posts: state.posts.filter(post => post.id !== action.postId) };\r\n\r\n\t\t// if action not matched - return old state\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// action creators - to avoid string typing\r\nexport const addMyPostAC = newPostText => ({ type: ADD_MY_POST, newPostText });\r\nconst setUserProfile = profile => ({ type: SET_USER_PROFILE, profile });\r\nconst setStatus = status => ({ type: SET_STATUS, status });\r\nexport const deletePost = postId => ({ type: DELETE_POST, postId });\r\n\r\n// thunk creators\r\nexport const getUserProfile = userId => async dispatch => {\r\n\tconst data = await profileAPI.getProfile(userId);\r\n\tdispatch(setUserProfile(data));\r\n};\r\nexport const getStatus = userId => async dispatch => {\r\n\tconst data = await profileAPI.getStatus(userId);\r\n\tdispatch(setStatus(data));\r\n};\r\nexport const updateStatus = status => async dispatch => {\r\n\tconst response = await profileAPI.updateStatus(status);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setStatus(status));\r\n\t}\r\n};\r\n\r\nexport default profileReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__haNKK\",\"item\":\"Navbar_item__1WWw5\",\"link\":\"Navbar_link__1tLpG\",\"active\":\"Navbar_active__1iM8M\",\"margin50\":\"Navbar_margin50__3Ya8D\"};","// constants for action types\r\nconst ADD_MY_MESSAGE = \"ADD_MY_MESSAGE\";\r\n\r\n// initial state for first load\r\nconst initialState = {\r\n\tpersons: [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: \"person-1\",\r\n\t\t\tavatar: \"https://picsum.photos/45\",\r\n\t\t\tisFriend: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: \"person-2\",\r\n\t\t\tavatar: \"https://picsum.photos/46\",\r\n\t\t\tisFriend: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tname: \"person-3\",\r\n\t\t\tavatar: \"https://picsum.photos/47\",\r\n\t\t\tisFriend: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tname: \"person-4\",\r\n\t\t\tavatar: \"https://picsum.photos/48\",\r\n\t\t\tisFriend: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 5,\r\n\t\t\tname: \"person-5\",\r\n\t\t\tavatar: \"https://picsum.photos/49\",\r\n\t\t\tisFriend: true,\r\n\t\t},\r\n\t],\r\n\tmessages: [\r\n\t\t{ id: 1, message: \"Hi !\" },\r\n\t\t{ id: 2, message: \"How are you?\" },\r\n\t\t{ id: 3, message: \"Yo !\" },\r\n\t\t{ id: 4, message: \"Yo\" },\r\n\t\t{ id: 5, message: \"Yo\" },\r\n\t],\r\n};\r\n\r\n// get state and action, make COPY of state!, change it and return new state (if no changes - returns old one)\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\t// вызывается в Dialogs для добавления мессаги в стейт с последующей переотрисовкой UI\r\n\t\tcase ADD_MY_MESSAGE:\r\n\t\t\tif (action.newMessageText === \"\") return state;\r\n\r\n\t\t\tconst newMessage = {\r\n\t\t\t\tid: 10,\r\n\t\t\t\tmessage: action.newMessageText,\r\n\t\t\t};\r\n\r\n\t\t\treturn { ...state, messages: [...state.messages, newMessage] };\r\n\r\n\t\t// if action not matched - return old state\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// action creators\r\nexport const addMyMessageAC = newMessageText => ({ type: ADD_MY_MESSAGE, newMessageText });\r\n\r\nexport default dialogsReducer;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newProps) => {\r\n\treturn items.map(user => (user[objPropName] === itemId ? { ...user, ...newProps } : user));\r\n};\r\n","import { updateObjectInArray } from \"../components/Common/Utils/ObjectHelpers\";\r\nimport { usersAPI } from \"./../api/api\";\r\n\r\n// constants for action types\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = \"TOGGLE_IS_FOLLOWING_IN_PROGRESS\";\r\n\r\n// initial state for first load\r\nconst initialState = {\r\n\tusers: [],\r\n\tpageSize: 5,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: false,\r\n\tisFollowingInProcess: [],\r\n};\r\n\r\n// get state and action, create COPY of STATE!, change it and return new state (if no changes - returns old one)\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\t// reducer for follow button\r\n\t\tcase FOLLOW:\r\n\t\t\treturn { ...state, users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true }) };\r\n\r\n\t\t// reducer for unfollow button\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn { ...state, users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false }) };\r\n\r\n\t\t// reducer for setting users on page\r\n\t\tcase SET_USERS:\r\n\t\t\treturn { ...state, users: action.users };\r\n\r\n\t\t// reducer for setting current page\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn { ...state, currentPage: action.currentPage };\r\n\r\n\t\t// reducer for setting totalUsersCount\r\n\t\tcase SET_TOTAL_USERS_COUNT:\r\n\t\t\treturn { ...state, totalUsersCount: action.count };\r\n\r\n\t\t// for toggle isFetching\r\n\t\tcase TOGGLE_IS_FETCHING:\r\n\t\t\treturn { ...state, isFetching: action.isFetching };\r\n\r\n\t\t// for toggle isFetching\r\n\t\tcase TOGGLE_IS_FOLLOWING_IN_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFollowingInProcess: action.isFetching\r\n\t\t\t\t\t? [...state.isFollowingInProcess, action.userId]\r\n\t\t\t\t\t: state.isFollowingInProcess.filter(id => id !== action.userId),\r\n\t\t\t};\r\n\r\n\t\t// if action not matched - return old state\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// action creators - to avoid string typing\r\nconst followAC = userId => ({ type: FOLLOW, userId });\r\nconst unfollowAC = userId => ({ type: UNFOLLOW, userId });\r\nconst setUsers = users => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\r\nconst setTotalUsersCount = totalUsersCount => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nconst toggleIsFetching = isFetching => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nconst toggleIsFollowingInProgress = (isFetching, userId) => ({\r\n\ttype: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n\tisFetching,\r\n\tuserId,\r\n});\r\n\r\n// thunk creator\r\nexport const getUsersThunk = (page, pageSize) => async dispatch => {\r\n\tdispatch(toggleIsFetching(true));\r\n\tconst data = await usersAPI.getUsers(page, pageSize);\r\n\tdispatch(toggleIsFetching(false));\r\n\tdispatch(setCurrentPage(page));\r\n\tdispatch(setUsers(data.items));\r\n\tdispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\n//antiDoubleCode f()\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\tdispatch(toggleIsFollowingInProgress(true, userId));\r\n\tconst data = await apiMethod(userId);\r\n\tif (data.resultCode === 0) dispatch(actionCreator(userId));\r\n\tdispatch(toggleIsFollowingInProgress(false, userId));\r\n};\r\n\r\n// thunk creator\r\nexport const follow = userId => async dispatch => {\r\n\tfollowUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followAC);\r\n};\r\n\r\n// thunk creator\r\nexport const unfollow = userId => async dispatch => {\r\n\tfollowUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowAC);\r\n};\r\n\r\nexport default usersReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/react.56cbceaf.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRing\":\"Preloader_ldsRing__1TPNK\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\twithCredentials: true,\r\n\theaders: {\r\n\t\t\"API-KEY\": \"9d885aec-0e55-4d92-a640-1f14725751f5\",\r\n\t},\r\n});\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage = 1, pageSize = 5) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n\t},\r\n\r\n\tunfollow(id) {\r\n\t\treturn instance.delete(`follow/${id}`).then(response => response.data);\r\n\t},\r\n\r\n\tfollow(id) {\r\n\t\treturn instance.post(`follow/${id}`, {}).then(response => response.data);\r\n\t},\r\n};\r\n\r\nexport const authAPI = {\r\n\tgetAuth() {\r\n\t\treturn instance.get(`auth/me`).then(response => response.data);\r\n\t},\r\n\tlogin(email, password, rememberMe = false) {\r\n\t\treturn instance.post(`auth/login`, { email, password, rememberMe });\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`auth/login`);\r\n\t},\r\n};\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId) {\r\n\t\treturn instance.get(`profile/${userId}`).then(response => response.data);\r\n\t},\r\n\r\n\tgetStatus(userId) {\r\n\t\treturn instance.get(`profile/status/${userId}`).then(response => response.data);\r\n\t},\r\n\r\n\tupdateStatus(status) {\r\n\t\treturn instance.put(`profile/status`, { status });\r\n\t},\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport styles from \"./Friend.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// Дем компонента\r\nconst Friend = props => {\r\n\tconst path = \"/dialogs/\" + props.id;\r\n\treturn (\r\n\t\t<div className={styles.item}>\r\n\t\t\t<img className={styles.avatar} src={props.avatar} alt=\"avatar\" />\r\n\t\t\t<NavLink\r\n\t\t\t\tclassName={styles.name}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t\tto={path}\r\n\t\t\t>\r\n\t\t\t\t{props.name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Friend;\r\n","import React from \"react\";\r\nimport styles from \"./Friends.module.css\";\r\nimport Friend from \"./Friend/Friend\";\r\n\r\n// Дем компонента, мапит из пропс.persons объект из компонент Friend и рендерит\r\nconst Friends = props => {\r\n\tconst chosenFriends = props.persons.map(person => {\r\n\t\treturn (\r\n\t\t\tperson.isFriend && (\r\n\t\t\t\t<Friend\r\n\t\t\t\t\tname={person.name}\r\n\t\t\t\t\tkey={person.id}\r\n\t\t\t\t\tid={person.id}\r\n\t\t\t\t\tavatar={person.avatar}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<h3 className={styles.title}>Friends</h3>\r\n\t\t\t<div className={styles.container}>{chosenFriends}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Friends;\r\n","import { connect } from \"react-redux\";\r\nimport Friends from \"./Friends\";\r\n\r\n// берет стейт из редакс стора и возвращает ветку persons\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tpersons: state.dialogsPage.persons,\r\n\t};\r\n};\r\n\r\n// передает пропсы (из mapStateToProps) в компоненту Friends, и вызывает Friends (React-Redux)\r\nconst FriendsContainer = connect(mapStateToProps)(Friends);\r\n\r\nexport default FriendsContainer;\r\n","import React from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport FriendsContainer from \"./Friends/FriendsContainer\";\r\n\r\n// компонента (Dem) рендерит навлинки меню (надо загнать в подкомпоненты) и компоненту FriendsContainer (Cont)\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav className={styles.wrapper}>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink className={styles.link} activeClassName={styles.active} to=\"/Profile\">\r\n\t\t\t\t\tProfile\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink className={styles.link} activeClassName={styles.active} to=\"/Dialogs\">\r\n\t\t\t\t\tDialogs\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink className={styles.link} activeClassName={styles.active} to=\"/Users\">\r\n\t\t\t\t\tUsers\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink className={styles.link} activeClassName={styles.active} to=\"/News\">\r\n\t\t\t\t\tNews\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink className={styles.link} activeClassName={styles.active} to=\"/Music\">\r\n\t\t\t\t\tMusic\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<NavLink className={styles.link + \" \" + styles.margin50} activeClassName={styles.active} to=\"/Settings\">\r\n\t\t\t\t\tSettings\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.item}>\r\n\t\t\t\t<FriendsContainer />\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport incognito from \"./../../assets/images/incognito.png\";\r\nimport logo from \"./../../assets/images/react.png\";\r\n\r\n// Дем компонента\r\nconst Header = props => {\r\n\treturn (\r\n\t\t<header className={styles.wrapper}>\r\n\t\t\t<img className={styles.logo} src={logo} alt=\"logo\" />\r\n\t\t\t<a className={styles.apiLink} target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://social-network.samuraijs.com\">\r\n\t\t\t\tSamuraiJS Social Network API\r\n\t\t\t</a>\r\n\t\t\t<div className={styles.loginWrapper}>\r\n\t\t\t\t{props.isAuth ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img className={styles.avatar} src={props.photo ? props.photo : incognito} alt=\"ava\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>{props.login}</div>\r\n\t\t\t\t\t\t<button onClick={props.logout}>Logout</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NavLink to={\"/login\"}>Login</NavLink>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"./../../Redux/authReducer\";\r\n\r\n// class component - container\r\nclass HeaderApiContainer extends Component {\r\n\r\n\trender() {\r\n\t\treturn <Header {...this.props} />;\r\n\t}\r\n}\r\n\r\nconst mstp = state => ({\r\n\tisAuth: state.auth.isAuth,\r\n\tlogin: state.auth.login,\r\n\tid: state.auth.id,\r\n\tphoto: state.auth.photo,\r\n});\r\n\r\nexport const HeaderContainer = connect(mstp, { logout })(HeaderApiContainer);\r\n","import { getAuth } from \"./authReducer\";\r\n\r\n// constants for action types\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\n// initial state for first load\r\nconst initialState = {\r\n\tinitialized: false,\r\n};\r\n\r\n// get state and action, create COPY of STATE!, change it and return new state (if no changes - returns old one)\r\nconst appReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS:\r\n\t\t\treturn { ...state, initialized: true };\r\n\r\n\t\t// if action not matched - return old state\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// action creators - to avoid string typing\r\nconst initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\n// thunk creators\r\nexport const initializeApp = () => async dispatch => {\r\n\tawait dispatch(getAuth());\r\n\tdispatch(initializedSuccess());\r\n};\r\n\r\nexport default appReducer;\r\n","import React, { Component, Suspense } from \"react\";\nimport styles from \"./App.module.css\";\nimport \"./css/reset.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { HeaderContainer } from \"./components/Header/HeaderContainer\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { initializeApp } from \"./Redux/appReducer\";\nimport { Preloader } from \"./components/Common/Preloader/Preloader\";\n\n// lazy imports of all routed components\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\nconst LoginPage = React.lazy(() => import(\"./components/Login/Login\"));\nconst Settings = React.lazy(() => import(\"./components/Settings/Settings\"));\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\nconst News = React.lazy(() => import(\"./components/News/News\"));\n\n// верхняя компонента\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp();\n\t}\n\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn <Preloader />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={styles.wrapper}>\n\t\t\t\t<HeaderContainer />\n\t\t\t\t<Navbar />\n\t\t\t\t<div className={styles.gridContent}>\n\t\t\t\t\t<Suspense fallback={<Preloader />}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n\t\t\t\t\t\t\t<Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n\t\t\t\t\t\t\t<Route path=\"/users\" render={() => <UsersContainer />} />\n\t\t\t\t\t\t\t<Route path=\"/login\" render={() => <LoginPage />} />\n\t\t\t\t\t\t\t<Route path=\"/news\" component={News} />\n\t\t\t\t\t\t\t<Route path=\"/music\" component={Music} />\n\t\t\t\t\t\t\t<Route path=\"/settings\" component={Settings} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mstp = state => ({ initialized: state.app.initialized, userId: state.auth.id });\nconst mdtp = { initializeApp };\n\nexport default compose(withRouter, connect(mstp, mdtp))(App);\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\n// соединяет наши редьюсеры (см импорт) с создаваемым с помощь редакса стором\r\nconst reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tapp: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n\r\n// for tests\r\nwindow.__store__ = store;\r\n","import \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport store from \"./Redux/redux-store\";\nimport { Provider } from \"react-redux\";\n\n// рендерит App через Provider (React-Redux), который создает контекст с объектом store (из redux-store)\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}