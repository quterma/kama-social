{"version":3,"sources":["components/Common/Forms/AddMessageForm/AddMessageForm.jsx","components/Common/Forms/AddMessageForm/AddMyMessageForm.module.css","hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Common/IconLink/IconLink.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Common/IconLink/IconLink.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Common/Forms/CustomForms/CustomForms.jsx","components/Common/Forms/CustomForms/CustomForms.module.css"],"names":["initialValues","textarea","validationSchema","Yup","shape","max","required","AddMessageForm","props","onSubmit","as","className","styles","name","placeholder","component","CustomTextarea","TextError","button","type","module","exports","mstp","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","IconLink","iconClass","facebook","website","vk","twitter","instagram","youtube","github","mainLink","network","href","link","target","rel","icon","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","input","onBlur","updateStatus","onChange","event","currentTarget","ProfileInfo","socialElements","entries","profile","contacts","map","contact","key","wrapper","avatarWrapper","avatar","alt","src","photos","large","incognito","fullName","aboutMe","lookingForAJobContainer","lookingForAJob","lookingForAJobDescription","socialContainer","Post","item","text","post","likes","MyPosts","postsElements","posts","id","newPost","values","addMyPost","MyPostsContainer","profilePage","newPostText","dispatch","addMyPostAC","Profile","header","ProfileContainer","userId","match","params","getUserProfile","getStatus","Preloader","mdtp","compose","withRouter","textError","children","field","form","touched","errors","textareaWrapper","textareaError","CustomInput","inputWrapper","label","toUpperCase","inputError"],"mappings":"kHAAA,gEAMMA,EAAgB,CAAEC,SAAU,IAC5BC,EAAmBC,MAAaC,MAAM,CAAEH,SAAUE,MAAaE,IAAI,GAAI,aAAaC,SAAS,eAiBpFC,IAdQ,SAAAC,GACtB,OACC,kBAAC,IAAD,CAAQR,cAAeA,EAAeS,SAAUD,EAAMC,SAAUP,iBAAkBA,GACjF,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOQ,GAAG,WAAWC,UAAWC,IAAOX,SAAUY,KAAK,WAAWC,YAAY,kBAAkBC,UAAWC,MAC1G,kBAAC,IAAD,CAAcH,KAAK,WAAWE,UAAWE,MACzC,4BAAQN,UAAWC,IAAOM,OAAQC,KAAK,UAAvC,mB,oBCfJC,EAAOC,QAAU,CAAC,SAAW,mCAAmC,OAAS,mC,sICGnEC,EAAO,SAAAC,GAAK,MAAK,CAAEC,OAAQD,EAAME,KAAKD,SAE/BE,EAAmB,SAAAC,GAAc,IACvCC,EADsC,uKAI1C,OAAKC,KAAKrB,MAAMgB,OACT,kBAACG,EAAcE,KAAKrB,OADI,kBAAC,IAAD,CAAUsB,GAAG,eAJF,GACZC,IAAMJ,WAStC,OADuCK,YAAQV,EAARU,CAAcJ,K,+ECXvC,SAASK,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGnC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,+B,oBCApGD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,cAAgB,mCAAmC,OAAS,4BAA4B,KAAO,0BAA0B,QAAU,6BAA6B,wBAA0B,6CAA6C,eAAiB,oCAAoC,0BAA4B,+CAA+C,gBAAkB,uC,oBCAlbD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,OAAS,8BAA8B,MAAQ,+B,oBCAjED,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,2B,oBCA3DD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,qB,kJCEpEmC,EAAW,SAAAhD,GACvB,IAUMiD,EAVQ,CACbC,SAAU,oBACVC,QAAS,2BACTC,GAAI,YACJC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,OAAQ,gBACRC,SAAU,4BAEazD,EAAM0D,SAC9B,OACC,uBAAGC,KAAM3D,EAAM4D,KAAMC,OAAO,SAASC,IAAI,sBAAsB3D,UAAWC,IAAOwD,MAChF,uBAAGzD,UAAW8C,EAAY,IAAM7C,IAAO2D,S,4CC6B3BC,EA3CgB,SAAAhE,GAAS,MAEPiE,oBAAS,GAFF,mBAEhCC,EAFgC,KAEtBC,EAFsB,OAKXF,mBAASjE,EAAMoE,QALJ,mBAKhCA,EALgC,KAKxBC,EALwB,KAwBtC,OAFDC,qBAAU,WAAQD,EAAUrE,EAAMoE,UAAW,CAACpE,EAAMoE,SAGlD,8BACIF,GACF,yBAAKK,cAnBgB,kBAAMJ,GAAY,IAmBDhE,UAAWC,IAAOgE,QAAxD,WACUpE,EAAMoE,QAEhBF,GACA,2BACCM,WAAW,EACXrE,UAAWC,IAAOqE,MAClBC,OAvBsB,WAC1BP,GAAY,GACZnE,EAAM2E,aAAaP,IAsBfQ,SAlBkB,SAACC,GACvBR,EAAUQ,EAAMC,cAAcnC,QAkB1BA,MAAOyB,MCXEW,EApBK,SAAA/E,GACnB,IACMgF,EADWhD,OAAOiD,QAAQjF,EAAMkF,QAAQC,UACdC,KAAI,SAACC,EAAS1D,GAAV,OAAiB0D,EAAQ,GAAK,kBAAC,EAAD,CAAUC,IAAK3D,EAAG+B,QAAS2B,EAAQ,GAAIzB,KAAMyB,EAAQ,KAAS,QAChI,OACC,yBAAKlF,UAAWC,IAAOmF,SACtB,yBAAKpF,UAAWC,IAAOoF,eACtB,yBAAKrF,UAAWC,IAAOqF,OAAQC,IAAI,SAASC,IAAK3F,EAAMkF,QAAQU,OAAOC,MAAQ7F,EAAMkF,QAAQU,OAAOC,MAAQC,OAE5G,yBAAK3F,UAAWC,IAAOC,MAAvB,aAAwCL,EAAMkF,QAAQa,UACtD,yBAAK5F,UAAWC,IAAO4F,SAAvB,aAA2ChG,EAAMkF,QAAQc,SACzD,kBAAC,EAAD,CAAwB5B,OAAQpE,EAAMoE,OAAQO,aAAc3E,EAAM2E,eAClE,yBAAKxE,UAAWC,IAAO6F,yBACtB,uBAAG9F,UAAS,UAAKC,IAAO8F,eAAZ,YAA8BlG,EAAMkF,QAAQgB,eAAiB,iBAAmB,qBAC5F,yBAAK/F,UAAWC,IAAO+F,2BAAvB,oBAAoEnG,EAAMkF,QAAQiB,4BAEnF,yBAAKhG,UAAWC,IAAOgG,iBAAkBpB,K,oCCL7BqB,EAdF,SAAArG,GACZ,OACC,yBAAKG,UAAWC,IAAOkG,MACtB,yBACCnG,UAAWC,IAAOqF,OAClBE,IAAI,2BACJD,IAAI,WAEL,uBAAGvF,UAAWC,IAAOmG,MAAOvG,EAAMwG,MAClC,uBAAGrG,UAAWC,IAAOmG,MAArB,MAA+BvG,EAAMyG,MAArC,Y,SCUYC,EAjBC,SAAA1G,GAEf,IAAM2G,EAAgB3G,EAAM4G,MAAMxB,KAAI,SAAAoB,GAAI,OAAI,kBAAC,EAAD,CAAMlB,IAAKkB,EAAKK,GAAIL,KAAMA,EAAKA,KAAMC,MAAOD,EAAKC,WAK/F,OACC,yBAAKtG,UAAWC,IAAOmF,SACtB,yBAAKpF,UAAWC,IAAOwG,OAAQD,GAC/B,yBAAKxG,UAAWC,IAAO0G,SACtB,kBAAC/G,EAAA,EAAD,CAAgBE,SANA,SAAA8G,GAAM,OAAI/G,EAAMgH,UAAUD,EAAOtH,gB,gBCatCwH,EAFUzF,aAjBD,SAAAT,GACvB,MAAO,CACN6F,MAAO7F,EAAMmG,YAAYN,MACzBO,YAAapG,EAAMmG,YAAYC,gBAKN,SAAAC,GAC1B,MAAO,CACNJ,UAAW,SAAAG,GACVC,EAASC,YAAYF,QAMC3F,CAA6CkF,GCJvDY,EAXC,SAAAtH,GAEf,OACC,yBAAKG,UAAWC,IAAOmF,SACtB,yBAAKpF,UAAWC,IAAOmH,SACvB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAarC,QAASlF,EAAMkF,QAASd,OAAQpE,EAAMoE,OAAQO,aAAc3E,EAAM2E,iB,gCCH5E6C,E,kLAIJ,IAAIC,EAASpG,KAAKrB,MAAM0H,MAAMC,OAAOF,OAEhCA,IAEJA,EAASpG,KAAKrB,MAAM6G,IAErBxF,KAAKrB,MAAM4H,eAAeH,GAC1BpG,KAAKrB,MAAM6H,UAAUJ,K,+BAIrB,OAAKpG,KAAKrB,MAAMkF,QACT,kBAAC,EAAD,iBAAa7D,KAAKrB,MAAlB,CAAyBkF,QAAS7D,KAAKrB,MAAMkF,QAASd,OAAQ/C,KAAKrB,MAAMoE,OAAQO,aAActD,KAAKrB,MAAM2E,gBADjF,kBAACmD,EAAA,EAAD,U,GAfH3G,aAqBzB4G,EAAO,CAAEH,mBAAgBC,cAAWlD,kBAG3BqD,sBAAQxG,aAJV,SAAAT,GAAK,MAAK,CAAEmE,QAASnE,EAAMmG,YAAYhC,QAASd,OAAQrD,EAAMmG,YAAY9C,OAAQyC,GAAI9F,EAAME,KAAK4F,MAIzEkB,GAAOE,IAAY/G,IAAzC8G,CAA2DR,I,oLC/B7D/G,EAAY,SAAAT,GACxB,OAAO,yBAAKG,UAAWC,IAAO8H,WAAYlI,EAAMmI,WAGpC3H,EAAiB,SAAC,GAAD,IAC7B4H,EAD6B,EAC7BA,MAD6B,IAE7BC,KAAQC,EAFqB,EAErBA,QAASC,EAFY,EAEZA,OACdvI,EAH0B,uCAK7B,yBAAKG,UAAWC,IAAOoI,iBACtB,8CAAcJ,EAAWpI,EAAzB,CAAgCG,UAAS,UAAKC,IAAOX,SAAZ,YAAwB6I,EAAQF,EAAM/H,OAASkI,EAAOH,EAAM/H,OAASD,IAAOqI,oBAK1GC,EAAc,SAAC,GAAD,IAC1BN,EAD0B,EAC1BA,MAD0B,IAE1BC,KAAQC,EAFkB,EAElBA,QAASC,EAFS,EAETA,OACdvI,EAHuB,uCAK1B,yBAAKG,UAAWC,IAAOuI,cACtB,2BAAOxI,UAAWC,IAAOwI,OACvBR,EAAM/H,KAAKwI,cAAgB,IAC5B,2CAAWT,EAAWpI,EAAtB,CAA6BG,UAAS,UAAKC,IAAOqE,MAAZ,YAAqB6D,EAAQF,EAAM/H,OAASkI,EAAOH,EAAM/H,OAASD,IAAO0I,mB,mBCzBlHlI,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,aAAe,kCAAkC,cAAgB,mCAAmC,WAAa,gCAAgC,UAAY","file":"static/js/4.e167b79c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"./AddMyMessageForm.module.css\";\r\nimport { CustomTextarea, TextError } from \"../CustomForms/CustomForms\";\r\n\r\nconst initialValues = { textarea: \"\" };\r\nconst validationSchema = Yup.object().shape({ textarea: Yup.string().max(50, \"Too Long!\").required(\"Required!\") });\r\n\r\n// Formik Form Component\r\nconst AddMessageForm = props => {\r\n\treturn (\r\n\t\t<Formik initialValues={initialValues} onSubmit={props.onSubmit} validationSchema={validationSchema}>\r\n\t\t\t<Form>\r\n\t\t\t\t<Field as=\"textarea\" className={styles.textarea} name=\"textarea\" placeholder=\"Enter your post\" component={CustomTextarea} />\r\n\t\t\t\t<ErrorMessage name=\"textarea\" component={TextError} />\r\n\t\t\t\t<button className={styles.button} type=\"submit\">\r\n\t\t\t\t\tAdd message\r\n\t\t\t\t</button>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default AddMessageForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"AddMyMessageForm_textarea__rlpHg\",\"button\":\"AddMyMessageForm_button__ancnJ\"};","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mstp = state => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const withAuthRedirect = Component => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\t// if not authorized - redirect to login\r\n\t\t\tif (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\t\t\treturn <Component {...this.props} />;\r\n\t\t}\r\n\t}\r\n\r\n\tconst ConnectedAuthRedirectComponent = connect(mstp)(RedirectComponent);\r\n\treturn ConnectedAuthRedirectComponent;\r\n};\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__3v0xw\",\"header\":\"Profile_header__3BGW4\",\"headerImage\":\"Profile_headerImage__ulVwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__38-4T\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__1KNFM\",\"avatar\":\"ProfileInfo_avatar__d0B8E\",\"name\":\"ProfileInfo_name__1qjFR\",\"aboutMe\":\"ProfileInfo_aboutMe__BtjOd\",\"lookingForAJobContainer\":\"ProfileInfo_lookingForAJobContainer__1ZSda\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__2A4AG\",\"lookingForAJobDescription\":\"ProfileInfo_lookingForAJobDescription__1B3Wg\",\"socialContainer\":\"ProfileInfo_socialContainer__21KAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"IconLink_icon__2vLwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__21MNI\",\"input\":\"ProfileStatus_input__3oOEL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2f_NF\",\"wrapper\":\"MyPosts_wrapper__3itjZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2cPih\",\"avatar\":\"Post_avatar__18NKH\",\"text\":\"Post_text__M5RM-\"};","import React from \"react\";\r\nimport styles from \"./IconLink.module.css\";\r\n\r\nexport const IconLink = props => {\r\n\tconst icons = {\r\n\t\tfacebook: \"fab fa-facebook-f\",\r\n\t\twebsite: \"fab fa-internet-explorer\",\r\n\t\tvk: \"fab fa-vk\",\r\n\t\ttwitter: \"fab fa-twitter\",\r\n\t\tinstagram: \"fab fa-instagram\",\r\n\t\tyoutube: \"fab fa-youtube\",\r\n\t\tgithub: \"fab fa-github\",\r\n\t\tmainLink: \"fab fa-internet-explorer\",\r\n\t};\r\n\tconst iconClass = icons[props.network];\r\n\treturn (\r\n\t\t<a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.link}>\r\n\t\t\t<i className={iconClass + \" \" + styles.icon}></i>\r\n\t\t</a>\r\n\t);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ProfileStatus.module.css\";\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\t// hook for edit mode state and it's toggling\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\t// hook for status editing\r\n\tconst [status, setStatus] = useState(props.status);\r\n\r\n\t// f() for activating edit mode (toggling editMode state in true)\r\n\tconst activateEditMode = () => setEditMode(true);\r\n\t\r\n\t// f() for deactivating edit mode (toggling editMode state in false and status 'dispatching' into store)\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\r\n\t// f() for parsing status value 'from event' to status\r\n\tconst onStatusChange = (event) => {\r\n\t\tsetStatus(event.currentTarget.value);\r\n\t}\r\n\r\n\t// hook subscribing for props.status\r\n\tuseEffect(() => { setStatus(props.status) }, [props.status]);\r\n\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{ !editMode &&\r\n\t\t\t\t\t<div onDoubleClick={activateEditMode} className={styles.status}>\r\n\t\t\t\t\t\tStatus: {props.status}\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t{editMode && (\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport { IconLink } from \"./../../Common/IconLink/IconLink\";\r\nimport incognito from \"./../../../assets/images/incognito.png\";\r\n// import ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\n//Дем компонента\r\nconst ProfileInfo = props => {\r\n\tconst contacts = Object.entries(props.profile.contacts);\r\n\tconst socialElements = contacts.map((contact, i) => (contact[1] ? <IconLink key={i} network={contact[0]} link={contact[1]} /> : null));\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<div className={styles.avatarWrapper}>\r\n\t\t\t\t<img className={styles.avatar} alt=\"avatar\" src={props.profile.photos.large ? props.profile.photos.large : incognito} />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.name}>Fullname: {props.profile.fullName}</div>\r\n\t\t\t<div className={styles.aboutMe}>About me: {props.profile.aboutMe}</div>\r\n\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t<div className={styles.lookingForAJobContainer}>\r\n\t\t\t\t<i className={`${styles.lookingForAJob} ${props.profile.lookingForAJob ? \"fas fa-gamepad\" : \"fas fa-user-tie\"}`} />\r\n\t\t\t\t<div className={styles.lookingForAJobDescription}>LFJ description: {props.profile.lookingForAJobDescription}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.socialContainer}>{socialElements}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\n// Дем компонента\r\nconst Post = props => {\r\n\treturn (\r\n\t\t<div className={styles.item}>\r\n\t\t\t<img\r\n\t\t\t\tclassName={styles.avatar}\r\n\t\t\t\tsrc=\"https://picsum.photos/50\"\r\n\t\t\t\talt=\"avatar\"\r\n\t\t\t/>\r\n\t\t\t<p className={styles.text}>{props.post}</p>\r\n\t\t\t<p className={styles.text}>-- {props.likes} likes</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport AddMessageForm from \"./../../Common/Forms/AddMessageForm/AddMessageForm\";\r\n\r\n// Дем компонента\r\nconst MyPosts = props => {\r\n\t// мапит из пропс.posts объект из компонент Post\r\n\tconst postsElements = props.posts.map(post => <Post key={post.id} post={post.post} likes={post.likes} />);\r\n\r\n\t//code for onSubmit process\r\n\tconst addNewPost = values => props.addMyPost(values.textarea);\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<div className={styles.posts}>{postsElements}</div>\r\n\t\t\t<div className={styles.newPost}>\r\n\t\t\t\t<AddMessageForm onSubmit={addNewPost} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addMyPostAC } from \"../../../Redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// берет стейт из редакс стора и возвращает ветку profilePage\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t};\r\n};\r\n\r\n// берет нужные диспатч методы из редакс стора\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\taddMyPost: newPostText => {\r\n\t\t\tdispatch(addMyPostAC(newPostText));\r\n\t\t},\r\n\t};\r\n};\r\n\r\n// передает пропсы (из mapStateToProps) в компоненту MyPosts, и вызывает MyPosts (React-Redux)\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n// import { Preloader } from \"./../Common/Preloader/Preloader\";\r\n\r\n//Дем компонента\r\nconst Profile = props => {\r\n\t// if (!props.profile) return <Preloader />;\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<div className={styles.header}></div>\r\n\t\t\t<MyPostsContainer />\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"./../../Redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { Preloader } from \"./../Common/Preloader/Preloader\";\r\n\r\n// первый (снизу, с презентационной компоненты) контейнер\r\nclass ProfileContainer extends Component {\r\n\t// после рендера компоненты (Profile) - делает аякс запрос и передает респонс в функцию setUserProfile\r\n\tcomponentDidMount() {\r\n\t\t// берет параметр в урле и вставляет в юзерайди\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\t// если Profile/ без параметра (начальная загрузка, к примеру), то вставится, к примеру мой (пока хардкод)\r\n\t\tif (!userId) {\r\n\t\t\t// 11610\r\n\t\t\tuserId = this.props.id;\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.profile) return <Preloader />;\r\n\t\treturn <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />;\r\n\t}\r\n}\r\n\r\nconst mstp = state => ({ profile: state.profilePage.profile, status: state.profilePage.status, id: state.auth.id });\r\nconst mdtp = { getUserProfile, getStatus, updateStatus };\r\n\r\n// compose (from redux) объединяет несколько Хоков и прочих надстроек - аргументы в обратной очередности от вызова\r\nexport default compose(connect(mstp, mdtp), withRouter, withAuthRedirect)(ProfileContainer);\r\n","import React from \"react\";\r\nimport styles from \"./CustomForms.module.css\";\r\n\r\nexport const TextError = props => {\r\n\treturn <div className={styles.textError}>{props.children}</div>;\r\n};\r\n\r\nexport const CustomTextarea = ({\r\n\tfield, // { name, value, onChange, onBlur }\r\n\tform: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n\t...props\r\n}) => (\r\n\t<div className={styles.textareaWrapper}>\r\n\t\t<textarea {...field} {...props} className={`${styles.textarea} ${touched[field.name] && errors[field.name] && styles.textareaError}`} />\r\n\t\t{/* {touched[field.name] && errors[field.name] && <div className=\"error\">{errors[field.name]}</div>} */}\r\n\t</div>\r\n);\r\n\r\nexport const CustomInput = ({\r\n\tfield, // { name, value, onChange, onBlur }\r\n\tform: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n\t...props\r\n}) => (\r\n\t<div className={styles.inputWrapper}>\r\n\t\t<label className={styles.label}>\r\n\t\t\t{field.name.toUpperCase() + \":\"}\r\n\t\t\t<input {...field} {...props} className={`${styles.input} ${touched[field.name] && errors[field.name] && styles.inputError}`} />\r\n\t\t</label>\r\n\t</div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrapper\":\"CustomForms_textareaWrapper__1Vri7\",\"inputWrapper\":\"CustomForms_inputWrapper__2ghOv\",\"textareaError\":\"CustomForms_textareaError__QYTim\",\"inputError\":\"CustomForms_inputError__2bD2o\",\"textError\":\"CustomForms_textError__3sBPV\"};"],"sourceRoot":""}